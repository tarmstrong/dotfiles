#!/usr/bin/env python

# Simple wrapper around markdown

import argparse
import subprocess
import re

class MDPlus:
  def __init__(self, mdfile):
    self.file_name = mdfile
    self.data = self._load_data()

  def _load_data(self):
    command = ['markdown', self.file_name]
    pipe = subprocess.PIPE
    process = subprocess.Popen(command, stdout=pipe, stderr=pipe)
    markdown_output = process.communicate()[0]
    return markdown_output

  def mdash_filter(self, line):
    regex = r'--'
    replacement = '&mdash;'
    filtered_line = re.sub(regex, replacement, line)
    return filtered_line

  def process(self):
    lines = self.data.splitlines()
    line_filters = [self.mdash_filter]
    for line in lines:
      modified_line = line
      for line_filter in line_filters:
        modified_line = line_filter(modified_line)
      print modified_line

def main():
  parser = argparse.ArgumentParser(description='Run markdown with some modifications.')
  parser.add_argument('mdfile', metavar='markdownfile',
      help='The .md file to be converted.')
  args = parser.parse_args()
  mdfile = args.mdfile
  MDPlus(mdfile).process()

if __name__ == '__main__':
  main()
